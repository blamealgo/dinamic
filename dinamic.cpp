//Задача: найти число подпалиндромов
bool dp[n][n]; //динамический двумерный массив

for (int i = 0; i < n; i++) {
    dp[i][i] = true;
    dp[i][i + 1] = (s[i] == s[i + 1]);
}

for (int d = 3; d <= n; d++)
    for (int l = 0, r = l + d - 1; r < n; l++, r++)
        dp[l][r] = (s[l] == s[r]) && dp[l + 1][r - 1];

int ans = 0;
for (int l = 0; l < n; l++)
    for (int r = l; r < n; r++)
        ans += dp[l][r];



/* 
    Кузнечик прыгает на 1,2 и 3 клетки по полоске из n клеток
    Вопрос: сколько есть способ добраться до i клетки?
*/
f[0] = 1
f[1] = 1
f[2] = 2
for (int i = 3; i < n; i++)
    f[i] = f[i - 3] + f[i - 2] + f[i - 1];
